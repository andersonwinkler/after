#!/bin/bash

if [ -z "$1" ]; then
cat <<EOU
Runs various additional surface processing steps after FreeSurfer's recon-all.

Usage:

${0##*/} --subj <subject ID> [options]

Options:

--subj <subject ID>
  Specify the subject ID. Must exist in the subjects directory.

--sd <subjects directory>
  Specify the subjects directory if not the one defined by the environmental
  variable SUBJECTS_DIR.
  Note that either SUBJECTS_DIR must have been correctly set, --sd must be
  provided with the path to the directory that contains all subjects.
  
--sdnew <subjects directory>
  Instead of overwriting the original data, store in a different
  subjects directory. If the subject already exists in this directory,
  the program will stop with an error to prevent overwriting. If this
  directory does not exist, an attempt will be made to create it. 

--all
  Do everything.

--retessellate
  Do the retessellation to fsaverage. Data must have been processed with
  recon-all up to the point where the surface registration is performed
  (?h.sphere.reg must exist).

--curvatures
  Compute various curvature metrics and their composites. The ?h.white
  and ?h.pial surfaces must exist.
  
--lgi
  Compute the local gyrification index (following Schaer et al., 2008).
  
--fd
  Compute the fractal dimension.
  
--myelin
  Compute proxy measures for myelin based on T2 or FLAIR either of these
  modalities were originally imported with the options --T2 or --FLAIR in
  recon-all. It is not necessary that the flags --T2pial or --FLAIR pial were
  originally used.
  
--subseg
  Run scripts that do subsegmentation of amygala, thalamys, hippocampus.
  
--pve
  Compute measures of partial volume effects of GM, WM, and CSF for subcortical
  structures. If --subseg was used, will compute partial volume effects also for
  subsegmented structures.
  
--views
  Capture orthogonal views of surfaces and overlays, useful for quick
  inspection. These can be used to create an HTML file (see documentation).

--progress
  Show a progress bar in longer steps. Avoid if running in a cluster
  or headless system, but encouraged in interactive sessions.

Requirements:
* FreeSurfer must be installed and configured properly.

_____________________________________
Anderson M. Winkler
University of Texas Rio Grande Valley
May/2025
https://brainder.org
EOU
exit 1
fi

# Stop on crashes
set -e # Stop immediately if an error happens

# =====================================================================
check_fs() {
   # Check if the last run of recon-all was successful
   if [[ -f ${SUBJECTS_DIR}/${subj}/scripts/recon-all-status.log ]] ; then
      local fslog=$(sed '/^\s*$/d' ${SUBJECTS_DIR}/${subj}/scripts/recon-all-status.log | tail -n 1)
      if [[ ${fslog} =~ "exited with ERRORS" ]] ; then
         status=failed
         tdelta=indeterminable
      elif [[ ${fslog} =~ "finished without error" ]]; then
         status=success
         timestamp=$(echo "${fslog}" | sed 's/.*at //')
         tdelta=$(( $(date +%s) - $(date -d "${timestamp}" +%s) ))
      else
         status=unknown
         tdelta=unknown
      fi
   else
      status=unknown
      tdelta=unknown
   fi
   local -a result
   result[0]=${status}
   result[1]=${tdelta}
   echo "${result[@]}"
}

# =====================================================================
checkfiles() {
   # Confirm that FS has run successfully up to the stage we need;
   # If not, inform the user about the missing files. Note we don't care
   # here if recon-all.log shows last a failed run. As long as these
   # files exist, we are ok to proceed.
   FILELIST=${1}
   MISSING=()
   for f in "${FILELIST[@]}" ; do
      if [[ ! -f "${f}" ]] ; then
         MISSING+=("${f}")
      fi
   done
   if [[ ! -z ${MISSING} ]] ; then
      echo "Error: Previous call to FreeSurfer did not run up to the stage needed to allow ${2}."
      echo "Make sure all steps at least up to surface registration (up to -surfreg) have been executed successfully."
      echo "The missing files are:"
      for f in "${MISSING[@]}" ; do
         echo "- ${f}"
      done
      exit 1
   fi
}

# =====================================================================
# Some default variables, will be modified later
NEW_SUBJECTS_DIR=""     # New subjects dir to store outputs. Will be replaced below.
DOALL=false             # Do everything
DORETESSELLATE=false    # Do the retessellation
DOCURVATURES=false      # Compute the better curvatures and their composites
DOLGI=false             # Compute the LGI
DOFRACTAL=false         # Compute the fractal dimension
DOMYELIN=false          # Compute myelin surrogates from T2 or FLAIR
DOSUBSEG=false          # Run substructure segmentations
DOPVE=false             # Compute partial volume effects
DOVIEWS=false           # Capture views for later inspection
PROGRESS=""             # Show a progress bar when retessellating? (avoid using in the cluster)

# Parse arguments
while [[ ${#} -gt 0 ]] ; do
   key="${1}"
   case ${key} in
      -subject|-subjid|-sid|-s|-subj|--subject|--subjid|--sid|--s|--subj)
      subj="${2}"
      shift 2
      ;;
   -sd|--sd)
      SUBJECTS_DIR="${2}"
      shift 2
      ;;
   -sdnew|--sdnew)
      NEW_SUBJECTS_DIR="${2}"
      shift 2
      ;;
   -all|--all)
      DOALL=true
      shift
      ;;
   -retessellate|--retessellate)
      DORETESSELLATE=true
      shift
      ;;
   -curvatures|--curvatures)
      DOCURVATURES=true
      shift
      ;;
   -lgi|--lgi|-localGI|--localGI)
      DOLGI=true
      shift
      ;;
   -fd|--fd|-fractal|--fractal)
      DOFRACTAL=true
      shift
      ;;
   -myelin|--myelin)
      DOMYELIN=true
      shift
      ;;
   -views|--views)
      DOVIEWS=true
      shift
      ;;
   -progress|--progress)
      PROGRESS="--progress"
      shift
      ;;
   *)
      echo "Error: Unknown option: ${key}"
      exit 1
      ;;
   esac
done

# Directory of this script
AFTERDIR=$(dirname "$(readlink -f "${0}")")

# Confirm we have FreeSurfer available
if [[ ! -e ${FREESURFER_HOME}/bin/recon-all ]] ; then
   echo "Error: FreeSurfer not correctly configured. Stopping."
   exit 1
fi

# Make sure we have a valid SUBJECTS_DIR
if [[ -z "${SUBJECTS_DIR}" ]] || [[ ! -d "$(readlink -f "${SUBJECTS_DIR}")" ]] ; then
   echo "Error: SUBJECTS_DIR variable not set or path provided with --sd is invalid."
fi

# Make a copy into NEW_SUBJECTS_DIR and use it instead of the original SUBJECTS_DIR
if [[ ! -z "${NEW_SUBJECTS_DIR}" ]] && [[ -d "$(readlink -f "${SUBJECTS_DIR}")" ]] ; then
   NEW_SUBJECTS_DIR=$(readlink -f "${NEW_SUBJECTS_DIR}")
   if [[ -d "${NEW_SUBJECTS_DIR}/${subj}" ]] ; then
      echo "Directory already exists: ${NEW_SUBJECTS_DIR}/${subj}. Stopping."
   else
      mkdir -p ${NEW_SUBJECTS_DIR}
      cp -rp ${SUBJECTS_DIR}/${subj} ${NEW_SUBJECTS_DIR}/
      export SUBJECTS_DIR=${NEW_SUBJECTS_DIR}
   fi
fi

# =====================================================================
# Do the retessellation
if ${DORETESSELLATE} || ${DOALL} ; then

   # Check we have all files needed for this step
   FILELIST=(
      ${SUBJECTS_DIR}/${subj}/mri/brain.finalsurfs.mgz
      ${SUBJECTS_DIR}/${subj}/surf/lh.orig
      ${SUBJECTS_DIR}/${subj}/surf/rh.orig
      ${SUBJECTS_DIR}/${subj}/surf/autodet.gw.stats.lh.dat
      ${SUBJECTS_DIR}/${subj}/surf/autodet.gw.stats.rh.dat
      ${SUBJECTS_DIR}/${subj}/surf/lh.sphere.reg
      ${SUBJECTS_DIR}/${subj}/surf/rh.sphere.reg )
   checkfiles ${FILELIST} retesselation

   # Do the retessellation proper
   mkdir -p ${SUBJECTS_DIR}/${subj}/after
   ${AFTERDIR}/retessellate --subj ${subj} --srf orig --subjdir "${SUBJECTS_DIR}" ${PROGRESS}

   # Replace the existing ?h.orig for the retessellated
   if [[ -f ${SUBJECTS_DIR}/${subj}/after/lh.orig.retess ]] && \
      [[ -f ${SUBJECTS_DIR}/${subj}/after/rh.orig.retess ]] ; then
      cp -rpv ${SUBJECTS_DIR}/${subj}/after/lh.orig.retess ${SUBJECTS_DIR}/${subj}/surf/lh.orig
      cp -rpv ${SUBJECTS_DIR}/${subj}/after/rh.orig.retess ${SUBJECTS_DIR}/${subj}/surf/rh.orig
   else
      echo "Retessellation failed. The expected output files were not both produced:"
      echo "- ${SUBJECTS_DIR}/${subj}/after/lh.orig.retess"
      echo "- ${SUBJECTS_DIR}/${subj}/after/rh.orig.retess"
      exit 1
   fi

   # If the user didn't explicitly ask, check if the original recon-all used --T2pial or --FLAIRpial; if yes, we will use them
   OPTS=""
   T2pial=false
   FLAIRpial=false
   [[ $(grep "bin/recon-all" ${SUBJECTS_DIR}/${subj}/scripts/recon-all.log |grep -- "-T2pial"|wc -l) -gt 0 ]] && T2pial=true
   [[ -f ${SUBJECTS_DIR}/${subj}/mri/T2.mgz         ]] && T2pial=true
   [[ -f ${SUBJECTS_DIR}/${subj}/surf/lh.pial.T2    ]] && T2pial=true
   [[ -f ${SUBJECTS_DIR}/${subj}/surf/rh.pial.T2    ]] && T2pial=true
   [[ $(grep "bin/recon-all" ${SUBJECTS_DIR}/${subj}/scripts/recon-all.log |grep -- "-FLAIRpial"|wc -l) -gt 0 ]] && FLAIRpial=true
   [[ -f ${SUBJECTS_DIR}/${subj}/mri/FLAIR.mgz      ]] && FLAIRpial=true
   [[ -f ${SUBJECTS_DIR}/${subj}/surf/lh.pial.FLAIR ]] && FLAIRpial=true
   [[ -f ${SUBJECTS_DIR}/${subj}/surf/rh.pial.FLAIR ]] && FLAIRpial=true
   ${T2pial}    && OPTS="${OPTS} -T2pial"
   ${FLAIRpial} && OPTS="${OPTS} -FLAIRpial"

   # Redo recon-all, from the point in which ?h.orig is used
   ${FREESURFER_HOME}/bin/recon-all \
     -s "${subj}" \
     -sd "${SUBJECTS_DIR}" \
     -white-preaparc \
     -cortex-label \
     -smooth2 \
     -inflate2 \
     -curvHK \
     -sphere \
     -surfreg \
     -jacobian_white \
     -avgcurv \
     -cortparc \
     -white \
     -pial \
     -curvstats \
     -cortribbon \
     -cortparc2 \
     -cortparc3 \
     -pctsurfcon \
     -hyporelabel \
     -aparc2aseg \
     -apas2aseg \
     -wmparc \
     -parcstats \
     -parcstats2 \
     -parcstats3 \
     -segstats \
     -balabels ${OPTS}

   # Check if recon-all finished without error and make sure that that termination was just now
   result=($(check_fs))
   if [[ ${result[0]} != "success" ]] || [[ ${result[1]} -gt 5 ]] ; then
      echo "Error: recon-all either failed or finished a long time (more than 5 seconds) ago."
      exit 1
   fi

   # Create the retessellated midthickness surface (not a typical FS output but sometimes created by other programs)
   for h in lh rh ; do
      if [[ -f ${SUBJECTS_DIR}/${subj}/surf/${h}.midthickness ]] ; then
         ${FREESURFER_HOME}/bin/mris_expand \
                    -thickness ${SUBJECTS_DIR}/${subj}/surf/${h}.white  \
                     0.5       ${SUBJECTS_DIR}/${subj}/surf/${h}.midthickness
      fi
   done
   
   # Compute distances and vectors indicating the repositioning of the ?h.orig into ?h.white.preaparc
   for h in lh rh ; do
      ${AFTERDIR}/surfdist --ref ${SUBJECTS_DIR}/${subj}/surf/${h}.orig \
                           --mov ${SUBJECTS_DIR}/${subj}/surf/${h}.white.preaparc \
                           --out ${SUBJECTS_DIR}/${subj}/after/${h}.dist
   done
fi

# =====================================================================
# Do the computation of better curvatures
if ${DOCURVATURES} || ${DOALL} ; then

   # Check we have all files needed for this step
   FILELIST=(
      ${SUBJECTS_DIR}/${subj}/surf/lh.white
      ${SUBJECTS_DIR}/${subj}/surf/rh.white
      ${SUBJECTS_DIR}/${subj}/surf/lh.pial
      ${SUBJECTS_DIR}/${subj}/surf/rh.pial )
   checkfiles ${FILELIST} "computation of curvatures"
   
   # Compute the curvatures
   ${AFTERDIR}/curvatures --subj ${subj} --surf white,pial --subjdir "${SUBJECTS_DIR}" ${PROGRESS}
fi

# =====================================================================
# Do the local gyrification index
if ${DOLGI} || ${DOALL} ; then

   # Check we have all files needed for this step
   FILELIST=(
      ${SUBJECTS_DIR}/${subj}/surf/lh.pial
      ${SUBJECTS_DIR}/${subj}/surf/rh.pial )
   checkfiles ${FILELIST} "computation of the LGI"

   # Compute the LGI proper
   PATH=${AFTERDIR}:${PATH} \
   ${FREESURFER_HOME}/bin/recon-all \
     -s "${subj}" \
     -sd "${SUBJECTS_DIR}" \
     -localGI
fi

# =====================================================================
# Make nice figures and histograms for inspection
if ${DOVIEWS} || ${DOALL} ; then
   OPTS=""
   (${DOCURVATURES} || ${DOALL}) && OPTS="${OPTS} --curvatures"
   (${DOLGI}        || ${DOALL}) && OPTS="${OPTS} --lgi"
   (${DOFRACTAL}    || ${DOALL}) && OPTS="${OPTS} --fd"
   (${DOMYELIN}     || ${DOALL}) && OPTS="${OPTS} --myelin"
   ${AFTERDIR}/views --subj ${subj} --subjdir "${SUBJECTS_DIR}" ${OPTS}
fi

